import type { NextPage } from "next";
import Head from "next/head";
import { GetServerSideProps } from "next";
import {
  Order_Status_Enum,
  useAllOpenOrdersSubscription,
  useUpdateOrderMutation,
} from "../generated/graphql";
import Cookies from "js-cookie";

interface Props {}

export const statusTypes = {
  baking: { value: "baking", color: "bg-blue-300", next: "ready" },
  gone: { value: "gone", color: "", next: "" },
  open: { value: "open", color: "bg-gray-300", next: "baking" },
  ready: { value: "ready", color: "bg-green-300", next: "gone" },
};

const Kitchen: NextPage<Props> = () => {
  const [{ data }] = useAllOpenOrdersSubscription();
  const [, updateOrder] = useUpdateOrderMutation();

  return (
    <div>
      <Head>
        <title>BYP | Dashbaord</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <article className="prose mb-12">
          <h1>Kitchen Heros only</h1>
        </article>

        <section>
          <article className="prose mb-12">
            <h2>Open Orders</h2>
          </article>
          <div>
            {data?.pizza_order.map((order, index) => {
              return (
                <div
                  key={index}
                  className="border-t py-4 border-gray-300 flex align-middle"
                >
                  <div className="flex-1">
                    <p>{order.pizza.title}</p>
                  </div>
                  <div className="flex-1">
                    {order.pizza.pizza_topping_pizzas
                      .map((ingredient) => ingredient.pizza_topping.emoji)
                      .join(", ")}
                  </div>
                  <div className="flex-1 align-center">
                    <p>
                      <span
                        className={`px-4 py-2 ${
                          statusTypes[order.order_status].color
                        } rounded-full`}
                      >
                        {order.order_status}
                      </span>
                    </p>
                  </div>
                  <div className="flex-1">
                    <button
                      onClick={() => {
                        updateOrder({
                          id: order.id,
                          status: statusTypes[order.order_status]
                            .next as Order_Status_Enum,
                        });
                      }}
                      className="btn btn-sm"
                    >
                      Next
                    </button>
                  </div>
                </div>
              );
            })}
          </div>
        </section>
      </main>
    </div>
  );
};

export default Kitchen;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const authed = Cookies.get("byp-user-id");

  if (authed) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return { props: {} };
};
